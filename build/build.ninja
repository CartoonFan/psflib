# This is the build file for project "psflib"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = ccache cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule STATIC_LINKER
 command = rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build sonarqube_report: phony meson-sonarqube_report

build meson-sonarqube_report: CUSTOM_COMMAND 
 COMMAND = /usr/bin/meson --internal commandrunner /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/build '' /usr/bin/meson scripts/sonarqube_report.sh
 description = Running$ external$ command$ sonarqube_report
 pool = console

build src/libpsflib.a.p/psf2fs.c.o: c_COMPILER ../src/psf2fs.c
 DEPFILE = src/libpsflib.a.p/psf2fs.c.o.d
 DEPFILE_UNQUOTED = src/libpsflib.a.p/psf2fs.c.o.d
 ARGS = -Isrc/libpsflib.a.p -Isrc -I../src -I../include -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -Wpedantic -std=c2x -Og -g -fPIC

build src/libpsflib.a.p/psflib.c.o: c_COMPILER ../src/psflib.c
 DEPFILE = src/libpsflib.a.p/psflib.c.o.d
 DEPFILE_UNQUOTED = src/libpsflib.a.p/psflib.c.o.d
 ARGS = -Isrc/libpsflib.a.p -Isrc -I../src -I../include -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -Wpedantic -std=c2x -Og -g -fPIC

build src/libpsflib.a: STATIC_LINKER src/libpsflib.a.p/psf2fs.c.o src/libpsflib.a.p/psflib.c.o
 LINK_ARGS = csrD

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Coverage rules

build meson-coverage: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal coverage /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/subprojects /home/jeremiah/workshop/psflib/build /home/jeremiah/workshop/psflib/build/meson-logs
 description = Generates$ coverage$ reports

build coverage: phony meson-coverage

build meson-coverage-xml: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal coverage --xml /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/subprojects /home/jeremiah/workshop/psflib/build /home/jeremiah/workshop/psflib/build/meson-logs
 description = Generates$ XML$ coverage$ report

build coverage-xml: phony meson-coverage-xml

build meson-coverage-text: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal coverage --text /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/subprojects /home/jeremiah/workshop/psflib/build /home/jeremiah/workshop/psflib/build/meson-logs
 description = Generates$ text$ coverage$ report

build coverage-text: phony meson-coverage-text

build meson-coverage-html: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal coverage --html /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/subprojects /home/jeremiah/workshop/psflib/build /home/jeremiah/workshop/psflib/build/meson-logs
 description = Generates$ HTML$ coverage$ report

build coverage-html: phony meson-coverage-html

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild /home/jeremiah/workshop/psflib /home/jeremiah/workshop/psflib/build /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony src/libpsflib.a

build clean: phony meson-clean

build meson-clean-gcno: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal delwithsuffix . gcno
 description = Deleting$ gcno$ files

build clean-gcno: phony meson-clean-gcno

build meson-clean-gcda: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal delwithsuffix . gcda
 description = Deleting$ gcda$ files

build clean-gcda: phony meson-clean-gcda

build meson-clean: CUSTOM_COMMAND PHONY | clean-gcda clean-gcno
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../src/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../src/meson.build meson-private/coredata.dat: phony 

default all

